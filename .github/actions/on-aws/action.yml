name: "On AWS"
description: "Initializes GitHub OIDC and STS AssumeRole"
inputs:
  region:
    description: "The AWS Region to deploy into."
    required: true
  ci-role-arn:
    description: "The IAM Role ARN which supports GitHub OIDC."
    required: true
  env:
    description: "The Environment we want to deploy into."
    required: true
outputs:
  project-context:
    description: "The Project Context retrieved from the Tooling Account."
    value: ${{ steps.get-project-context.outputs.project-context }}
  account:
    description: "The ID of the AWS Account to deploy into"
    value: ${{ steps.get-project-context.outputs.account }}

runs:
  using: "composite"
  steps:
    # SSO into the AWS role & account assigned by the `ci-role-arn` parameter.
    - name: AWS-GitHub-OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.ci-role-arn }}
        role-session-name: CI-GitHub-Action
        aws-region: ${{ inputs.region }}
    - name: Get-Project-Context
      id: get-project-context
      uses: jfdi-dev/pipelines/.github/actions/project-context@main
      with:
        env: ${{ inputs.env }}
    # With the Account ID and a Role Name, we can format a Role ARN
