name: "Run Terraform"
description: "Setup Terraform for pipeline use, tf init, tf apply"
inputs:
  region:
    description: "The region to deploy into"
    required: true
  project-context:
    description: "The full Project Context"
  account:
    description: "The ID of the AWS Account to deploy into"
  role:
    description: "The ARN of the Role to assume to deploy with"
  # tooling-account:
  #   description: "The id of the tooling account"
  #   required: true
  # project:
  #   description: "The name of the project."
  #   required: true
  # account:
  #   description: "The name of the account."
  #   required: true
  # terraform-state:
  #   description: "The key against which Terraform state will be stored."
  #   required: true
  # terraform-locks:
  #   description: "TF Locks table"
  #   required: true
  dir:
    description: "The directory which contains the Terraform module to deploy."
    required: false
runs:
  using: "composite"
  steps:
    - name: Setup-Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9.3
    - name: Create-Backend-Config
      working-directory: ${{ inputs.dir }}
      run: |
        echo 'bucket="${{ fromJSON(inputs.project-context).terraform.state }}"' >> ./config.s3.tfbackend
        echo 'dynamodb_table="${{ fromJSON(inputs.project-context).terraform.locks }}"' >> ./config.s3.tfbackend
        echo 'key="${{ inputs.account }}/${{ github.repository }}/${{ inputs.dir }}"' >> ./config.s3.tfbackend
      shell: bash
    - name: Terraform-Init
      working-directory: ${{ inputs.dir }}
      run: |
        terraform init -input=false -backend-config=./config.s3.tfbackend
      shell: bash
    # Is this even necessary if AWS_DEFAULT_REGION is set?
    - name: Create-AWS-Config
      run: | 
        echo "[default]" >> ./aws-config
        echo "role_arn=${{ inputs.role }}" >> ./aws-config
        echo "role_session_name=CI-SESSION" >> ./aws-config
        echo AWS_CONFIG_FILE='./aws-config' >> $GITHUB_ENV
      shell: bash
    - name: Create-Context-Config
      id: create-context-config
      working-directory: ${{ inputs.dir }}
      run: |
        echo TF_VAR_region='${{ inputs.region }}' >> $GITHUB_ENV
      shell: bash
    - name: Terraform-Apply
      working-directory: ${{ inputs.dir }}
      run: |
        terraform apply -input=false -auto-approve
      shell: bash
